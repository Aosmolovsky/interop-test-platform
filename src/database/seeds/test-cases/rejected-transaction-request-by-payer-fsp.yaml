name: Rejected Transaction Request by Payer FSP
use_case: Merchant-Initiated Merchant Payment
behavior: positive
description: |
  The Service Provider wants to test if he is capable of receiving a transaction from a different wallet.
  In this case, we simulate the scenario when the Payer would like to buy goods or services from a Service Provider (the Payee), but each of them uses different wallet providers.
  This flow shows the necessary steps for this transaction, simulating a reject status during the transaction requested by the Payer.
precondition: |
  Service Provider has GSMA Mobile Money API Implemented.
  Service Provider is capable of handled async calls.
  Payee and Payer MMOs exist in Mojaloop as Participants.
  Payee and Payer exist in Mojaloop as Parties.
  Amount should be the value "15.15".
  Debit party should be identified by account identifier "msisdn" with the value "+33555123456".
  Credit party should be identified by account identifier "msisdn" with the value "+33555789123".
data_example:
  uri: /transactions
  method: POST
  headers:
    accept: 'application/json'
    content-type: 'application/json'
    x-callback-url: 'http://example.com/example'
    x-date: '2020-02-20T10:28:44.466Z'
  body:
    amount: '15.15'
    currency: 'USD'
    type: 'merchantpay'
    debitParty:
      - key: "msisdn"
        value: "+33555123456"
    creditParty:
      - key: "msisdn"
        value: "+33555789123"
test_steps:
  - forward: POST /transactions
    backward: HTTP 202
    source: Service Provider
    target: Mobile Money Operator 1
    test_request_scripts:
      - name: Header has the Url Callback
        rules:
          headers.X-Callback-URL.*: 'regex:/.*/'
      - name: Debit and Credit party is present and is a Valid Party in the network
        rules:
          body.debitParty.*.key: 'in:msisdn'
          body.debitParty.*.value: 'in:+33555123456'
          body.creditParty.*.key: 'in:msisdn'
          body.creditParty.*.value: 'in:+33555789123'
      - name: Amount and currency are specified correctly
        rules:
          body.amount: 'in:15.15'
          body.currency: 'regex:/^[A-Z]{3}/'
      - name: Transaction is a Merchant Payment
        rules:
          body.type: 'in:merchantpay'
    test_response_scripts:
      - name: Transaction was successfully accepted
        rules:
          status: 'in:202'
      - name: Server Correlation Id is specified correctly
        rules:
          body.serverCorrelationId: 'regex:/^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$/'
      - name: Status is specified correctly
        rules:
          body.status: 'in:pending'
      - name: Notification Method is specified correctly
        rules:
          body.notificationMethod: 'in:callback'
    test_request_example:
      method: POST
      uri: /transactions
      headers:
        accept: 'application/json'
        content-type: 'application/json'
        x-callback-url: 'http://example.com/example'
        x-date: '2020-04-07T10:28:44.466Z'
      body:
        amount: '15.15'
        currency: 'USD'
        type: 'merchantpay'
        debitParty:
          - key: 'msisdn'
            value: "+33555123456"
        creditParty:
          - key: 'msisdn'
            value: '+33555789123'
    test_response_example:
      status: 202
      headers:
        content-type: 'application/json'
        x-date: '2020-04-07T10:28:44.466Z'
      body:
        serverCorrelationId: 'be77f48f-2433-4bfa-8cdd-aaf058a400de'
        status: 'pending'
        notificationMethod: 'callback'
  - forward: POST /transactionRequests
    backward: HTTP 202
    source: Mobile Money Operator 1
    target: Mojaloop
    test_request_scripts:
      - name: Transaction Type is a Merchant Payment
        rules:
          body.transactionType.scenario: 'in:PAYMENT'
          body.transactionType.initiator: 'in:PAYEE'
          body.transactionType.initiatorType: 'in:BUSINESS'
      - name: Transaction Request Id created
        rules:
          body.transactionRequestId: 'regex:/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/'
      - name: Debit and Credit party is present and is a Valid Party in the network
        rules:
          body.payer.partyIdInfo.partyIdType: 'in:MSISDN'
          body.payer.partyIdInfo.partyIdentifier: 'in:+33555123456'
          body.payee.partyIdInfo.partyIdType: 'in:MSISDN'
          body.payee.partyIdInfo.partyIdentifier: 'in:+33555789123'
      - name: Amount and currency are specified correctly
        rules:
          body.amount.amount: 'in:15.15'
          body.amount.currency: 'regex:/^[A-Z]{3}/'
    test_response_scripts:
      - name: Transaction was successfully accepted
        rules:
          status: 'in:202'
    test_request_example:
      method: POST
      uri: /transactionsRequests
      headers:
        content-type: 'application/vnd.interoperability.transactionRequests+json;version=1.0'
        date: 'Wed, 07 Apr 2020 10:28:45 GMT'
        fspiop-source: 'payeefsp'
        fspiop-destination: 'payerfsp'
      body:
        transactionRequestId: '950b88b3-cbcc-4f5d-92e7-46666529a7b6'
        payee:
          partIdInfo:
            partyIdType: 'MSISDN'
            partyIdentifier: "+33555789123"
        payer:
          partyIdType: 'MSISDN'
          partyIdentifier: "+33555123456"
        amount:
          amount: '15.15'
          currency: 'USD'
        type: 'merchantpay'
        transactionType:
          scenario: 'PAYMENT'
          initiator: 'PAYEE'
          initiatorType: 'BUSINESS'
    test_response_example:
      status: 202
  - forward: POST /transactionRequests
    backward: HTTP 202
    source: Mojaloop
    target: Mobile Money Operator 2
    test_request_scripts:
      - name: Transaction Type is a Merchant Payment
        rules:
          body.transactionType.scenario: 'in:PAYMENT'
          body.transactionType.initiator: 'in:PAYEE'
          body.transactionType.initiatorType: 'in:BUSINESS'
      - name: Transaction Request Id created
        rules:
          body.transactionRequestId: 'regex:/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/'
      - name: Debit and Credit party is present and is a Valid Party in the network
        rules:
          body.payer.partyIdInfo.partyIdType: 'in:MSISDN'
          body.payer.partyIdInfo.partyIdentifier: 'in:+33555123456'
          body.payee.partyIdInfo.partyIdType: 'in:MSISDN'
          body.payee.partyIdInfo.partyIdentifier: 'in:+33555789123'
      - name: Amount and currency are specified correctly
        rules:
          body.amount.amount: 'in:15.15'
          body.amount.currency: 'regex:/^[A-Z]{3}/'
    test_response_scripts:
      - name: Transaction was successfully accepted
        rules:
          status: 'in:202'
    test_request_example:
      method: POST
      uri: /transactionsRequests
      headers:
        content-type: 'application/vnd.interoperability.transactionRequests+json;version=1.0'
        date: 'Wed, 07 Apr 2020 10:28:45 GMT'
        fspiop-source: 'payeefsp'
        fspiop-destination: 'payerfsp'
      body:
        transactionRequestId: '950b88b3-cbcc-4f5d-92e7-46666529a7b6'
        payee:
          partIdInfo:
            partyIdType: 'MSISDN'
            partyIdentifier: "+33555789123"
        payer:
          partyIdType: 'MSISDN'
          partyIdentifier: "+33555123456"
        amount:
          amount: '15.15'
          currency: 'USD'
        type: 'merchantpay'
        transactionType:
          scenario: 'PAYMENT'
          initiator: 'PAYEE'
          initiatorType: 'BUSINESS'
    test_response_example:
      status: 202
  - forward: PUT /transactionRequests/{ID}
    backward: HTTP 200
    source: Mobile Money Operator 2
    target: Mojaloop
    test_request_scripts:
      - name: ID is Valid
        rules:
          uri.path: 'regex:/transactionRequests\/[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i'
          body.transactionId: 'regex:/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/'
      - name: Transaction Status is Rejected
        rules:
          body.transactionRequestState: 'in:REJECTED'
    test_response_scripts:
      - name: Transaction was successfully accepted
        rules:
          status: 'in:200'
    test_request_example:
      method: PUT
      uri: /transactionsRequests/950b88b3-cbcc-4f5d-92e7-46666529a7b6
      headers:
        content-type: 'application/vnd.interoperability.transactionRequests+json;version=1.0'
        date: 'Wed, 07 Apr 2020 10:28:45 GMT'
        fspiop-source: 'payerfsp'
        fspiop-destination: 'payeefsp'
      body:
        transactionRequestState: 'REJECTED'
    test_response_example:
      status: 200
  - forward: PUT /transactionRequests/{ID}
    backward: HTTP 200
    source: Mojaloop
    target: Mobile Money Operator 1
    test_request_scripts:
      - name: ID is Valid
        rules:
          uri.path: 'regex:/transactionRequests\/[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i'
          body.transactionId: 'regex:/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/'
      - name: Transaction Status is Rejected
        rules:
          body.transactionRequestState: 'in:REJECTED'
    test_response_scripts:
      - name: Transaction was successfully accepted
        rules:
          status: 'in:200'
    test_request_example:
      method: PUT
      uri: /transactionsRequests/950b88b3-cbcc-4f5d-92e7-46666529a7b6
      headers:
        content-type: 'application/vnd.interoperability.transactionRequests+json;version=1.0'
        date: 'Wed, 07 Apr 2020 10:28:45 GMT'
        fspiop-source: 'payerfsp'
        fspiop-destination: 'payeefsp'
      body:
        transactionRequestState: 'REJECTED'
    test_response_example:
      status: 200
  - forward: PUT /X-Callback-URL
    backward: HTTP 204
    source: Mobile Money Operator 1
    target: Service Provider
    test_request_scripts:
      - name: Error category is valid
        rules:
          body.errorCategory: 'in:businessRule'
      - name: Error code is valid
        rules:
          body.errorCode: 'in:genericError'
    test_response_scripts:
      - name: Transaction was successfully declined
        rules:
          status: 'in:204'
    test_request_example:
      method: 'PUT'
      uri: 'http://example.com/example'
      headers:
        content-type: 'application/json'
        x-date: '2020-04-07T10:28:44.466Z'
      body:
        errorCategory: 'businessRule'
        errorCode: 'genericError'
    test_response_example:
      status: 204
