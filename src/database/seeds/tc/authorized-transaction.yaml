name: Authorized Transaction by Payer FSP
use_case: Merchant-Initiated Merchant Payment
behavior: positive
description: |
  The Service Provider wants to test if he is capable of receiving a transaction from a different wallet provider that he has an account.
  In this case, we simulate the scenario when the Payer would like to buy goods or services from a Service Provider (the Payee), but each of them uses different wallet providers.
  This flow shows the necessary steps for this transaction simulating an approved transaction.
precondition: |
  Service Provider has GSMA Mobile Money API Implemented.
  Service Provider is capable of handled async calls.
  Payee and Payer MMOs exist in Mojaloop as Participants.
  Payee and Payer exist in Mojaloop as Parties.
  Debit party should be identified by account identifier "msisdn" with the value "+33555123456".
  Credit party should be identified by account identifier "msisdn" with the value  "+33555789123".
data_example:
  uri: /transactions
  method: POST
  headers:
    accept: 'application/json'
    content-type: 'application/json'
    x-callback-url: 'http://example.com/example'
    x-date: '2020-02-20T10:28:44.466Z'
  body:
    amount: '100'
    currency: 'USD'
    type: 'merchantpay'
    debitParty:
      - key: "msisdn"
        value: "+33555123456"
    creditParty:
      - key: "msisdn"
        value: "+33555789123"
test_steps:
  - forward: POST /transactions
    backward: HTTP 202
    source: Service Provider
    target: Mobile Money Operator 1
    test_request_scripts:
      - name: Header has the Url Callback
        rule: regex
        param: headers.X-Callback-URL
        value: /.*/
      - name: Debit key is present and is a Valid Party in the network
        rule: in
        param: body.debitParty.*.key
        value: msisdn
      - name: Debit value is present and is a Valid Party in the network
        rule: in
        param: body.debitParty.*.value
        value: 33555123456
      - name: Credit key is present and is a Valid Party in the network
        rule: in
        param: body.creditParty.*.key
        value: msisdn
      - name: Credit value is present and is a Valid Party in the network
        rule: in
        param: body.creditParty.*.value
        value: 33555789123
      - name: Amount is specified correctly
        rule: regex
        param: body.amount
        value: /^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$/
      - name: Currency is specified correctly
        rule: regex
        param: body.currency
        value: /^[A-Z]{3}/
      - name: Transaction is a Merchant Payment
        rule: in
        param: body.type
        value: merchantpay
    test_response_scripts:
      - name: Transaction was successfully accepted
        rule: in
        param: status
        value: 202
      - name: Server Correlation Id is specified correctly
        rule: regex
        param: body.serverCorrelationId
        value: /^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$/
      - name: Status is specified correctly
        rule: in
        param: body.status
        value: pending
      - name: Notification Method is specified correctly
        rule: in
        param: body.notificationMethod
        value: callback
